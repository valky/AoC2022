
var testInput = "[1,1,3,1,1]\r\n[1,1,5,1,1]\r\n\r\n[[1],[2,3,4]]\r\n[[1],4]\r\n\r\n[9]\r\n[[8,7,6]]\r\n\r\n[[4,4],4,4]\r\n[[4,4],4,4,4]\r\n\r\n[7,7,7,7]\r\n[7,7,7]\r\n\r\n[]\r\n[3]\r\n\r\n[[[]]]\r\n[[]]\r\n\r\n[1,[2,[3,[4,[5,6,7]]]],8,9]\r\n[1,[2,[3,[4,[5,6,0]]]],8,9]";
var inputs = "[[[[8,6]],[8,[7],[6,7,6,2,4]],10,[[1,7,9],7,[7,9]]],[[4,[],[10,5],[5,4,7],5],8,9,[[5,3,3,6,9],[9,5,10],8],[[0,6,9],[8],4,6,8]]]\r\n[[[],3,[[10,6,9,6],[6,8,7],[1,2]],8]]\r\n\r\n[[4,[4],[[10,7,2],[1,6,5,7,4],[7,3,3,1,5],[]],1],[[],[[7,6,3]],5,5]]\r\n[[[10]]]\r\n\r\n[[[[7,9]],[[0,9]],0,[[2,1,1,2,9],4],[[5]]],[]]\r\n[[8]]\r\n\r\n[[9,[[5,4,5,1,10]]],[[[6,9],3,[0,2]],5,6,[3,4,[2,2],10],[10,5,9]],[[[10,3,8],[],[6,9]],4]]\r\n[[[4,[7],[1,1,4,3,8],[3],[]],[[5,10,2,1],9,[2],6,7],4,[],[[10],[6,3,1,7]]],[4,[6],[[6],[6,6]]],[[[0,2,5],[3,5,10,7],[10,7,2,9],[],[0]],[[9,9,8],[]],[10,[2,10,7,7,3],4],[2,7]]]\r\n\r\n[[[],2,2,9,[[9],[1,10,5,1]]],[[[],9,5,[8]],10,9,[[1,4,0],[5]]]]\r\n[[5],[3],[],[9,[[7,2,0,9,3],[6,8,6],[]]],[[[6],3],6,[[2,8],8]]]\r\n\r\n[[]]\r\n[[[5,4],5]]\r\n\r\n[[7,7,5]]\r\n[[[[4,7,3],[6,0],1,6],[6,1,4,5]],[]]\r\n\r\n[[[[4,7,0,9,8],10,7,2]],[6,6,9],[[2,10],8,9,1,[1,[0,4]]],[[[2,0,2],[]]]]\r\n[[[[]],[],3],[],[[[],[8]],[[4,7,3,7,10],3,5]],[[9,[10,5,8,9,1]],0],[[[6,7,5,4,10],4,6,0,[8,3,1,2,7]],5,[10,1,5],10,0]]\r\n\r\n[[],[[3,8,2]]]\r\n[[8,4],[5],[3]]\r\n\r\n[[0,1,5,[[],[6,6,8,0],[0,2,5,9,9],[3,2,7],[5,2]],10],[],[[8,8],[1,3],3,2],[[[4,0],[]],[[4,1,2],[2],6,9,6],1,10,[[7],[0,7],5]],[4]]\r\n[[[],[6,[5,9,6,0,8],2,9,[4,2]],7,[9,6,0,10]]]\r\n\r\n[[],[],[],[9,[[1],[6,3,4,9]],10,8]]\r\n[[1,[[2],10,[0,9,3]]]]\r\n\r\n[[0,1,4,4],[[7,[6],[2,5,1,3],5],[[8,3,7],[6],[],8],8,1,[9,0,[]]],[[0,[3,9,3,5],[2,0,9,0,7],6]],[[[3,3,1,10,9]],[[0,7,1],8,[10,0],8],[[9,3,5,4],5,[0],5],8,[[3,6,10],0,2,6]]]\r\n[[[8,[1,2,10,9],2,[8,4,4]],[3,[5,5]],4],[[],2,[],6,3],[[10,7],[],7,[8,6,[5],4,3],2]]\r\n\r\n[[[[],1,2],[[7,7,7],6,[1,7,1]]],[4,8],[]]\r\n[[3,1,[1,6,[9,9,5],5],[[1,7,0,6],[10,8,10],[3,8],[6,2,7,5]]]]\r\n\r\n[[1]]\r\n[[[3],[[9,4,10,10],[8,9,1],[],[0,3,10,5]],[8,[]]],[[[10,6,0],2,1],5,0,[7],[[9]]],[[[],[9,9,3,2,3],5]]]\r\n\r\n[[],[7,2],[5,[9,[]],1,[4,6,5],[[9,10,8,3],6]]]\r\n[[[[]],0,[1,8],[5,2,7,2],6],[],[[],[[2,1,3,9],6,9,5,3],2],[[[10],[0],[4,0,3,6,8]],4],[9]]\r\n\r\n[[],[],[],[]]\r\n[[],[[3,6],6,[6],[[3,10,4],6],[]]]\r\n\r\n[[8,7,10],[3],[9,[],[[5,1,6,10,4]],4,[[9,8,1,1],[0,0,2],1]]]\r\n[[[1,6,[4,5,3,1]]],[[],[[7,0,5,1,9],6,[0,9,4,3]]]]\r\n\r\n[[2,2,1,8],[],[[[10,4,10,6],[2,8,3,10,6],[]],1,6],[6,0]]\r\n[[2,3,[8,[2,7]],8],[4,[[6,6,4,2],4,5,[7,5]],8,1,[]],[7]]\r\n\r\n[[[],[1,[9,1,9],[8,8,8,5]],3,[4,9,4,[2,6,6]],[]],[[7,[1,9,6]],6,[[10,0,0],[4,7,1],4,9,7]]]\r\n[[[[],8,5,1],3,[[8,2,2],4,[2,1,2,3,7]],10,[2,[5,7,6],3,[9,6,5,0,9],4]],[],[9,3,2,7],[4,[[4,10],[8,3,8]],6,[],9]]\r\n\r\n[[[],[[],[5]],4],[[0,[],9,[8,5,3,2,2]],[8]],[[[2,5]],[10,8,[7,8,7,3]],5,[[2,10],3,8,0,[6,9,10]],5],[[0,[7],[]],[[3,9,4,1,6],8],[[4,4,7,2],8],[[3],[],3],7]]\r\n[[[2,0,[7,5]],[1,5,7,6,[]],9,[2,1,[6,0],3,[3]]]]\r\n\r\n[[1,3,10,[]],[],[7,[8,4],[[],0,[4,8],6],4,[[4,0],[5,0,8,3],[0,1],8,[2,9,7,6,5]]],[3,5],[9,[[8,3,6,0],[10,0,5],10],[[10,1,4,0],4,8,5],9,[7,[0],[7,9],7,2]]]\r\n[[2,9,0,[[5,8,10,10,5],8,4,[5,6,10]],10],[8,[0,[10],[6],4,[]],[[9,4,0],[],[2,10,3,3,4],[3]],1,10],[[[],0,7,3,3],9,[[5,3,0],5,[4,6,6,7]],[]],[6,[[3,1],10,[0,8],0],8,[4,[],[8,0,7,9]],7],[9,4,[10],[[2,10,7,6]],1]]\r\n\r\n[[[],8,9,2,[6,[0,2,10,2],[4,9,7,2,10]]],[9,[[3,4]],5,9]]\r\n[[9],[[],[1,6,[5,9,9,9,0]],6]]\r\n\r\n[[5,2,10],[2,[[],7,9,3],0,[7,[]]],[[9,[5,6,5,0],4,0,3],10,1,[]],[8,10,3,9]]\r\n[[[2,[3]],9]]\r\n\r\n[[],[6,[3,[],[]],8,[[7,7,8,2],4],0]]\r\n[[[[0,5,7]],[[]],7,[4,[9,0,5],7,3]],[5,[[0,8,10,0],3],[1,4],[10],[]]]\r\n\r\n[[1,5],[10,[[9,7,1]],0,[9,[6,3],[7],9,[]]]]\r\n[[5,[2,[4,0,4,7,8],[4]]],[8,[2,9],5],[],[4,2]]\r\n\r\n[[7,[[0,0,5,4]],4],[[[2,4]],[1,[3,2,8],[9,1,8,2,2],0,1],2],[[[4,7],3,3,9]]]\r\n[[],[[[8],0,10,[0,4]],2,[9,2]],[10,4],[2,[7],10]]\r\n\r\n[[[],10],[[6,7,[8,6,6],2],5,[9,[5,7,9,0],[10,6],7]],[[],[5],10,[[6],6,7,6,[6]]],[[]]]\r\n[[[[],[]],[]],[[[6],[9],[4,0,8,5]],[3],[[8,2,7,7]],[],[3,[5,1],[9],[7,1]]],[[7,[0],[],3],[2]],[[]]]\r\n\r\n[7,10,4,6]\r\n[7,10,4,6,9]\r\n\r\n[[9]]\r\n[[7,2,6],[[6,9,[]],[5,3,6],[2],[[0,7,1],[0],[2],[9,9,0,8,2],[9,5,7,6,8]]],[[8,6,10,0,8],[9,[3,10],4,[2,4,3,4,4],5]],[],[]]\r\n\r\n[[[3,8,[]],1,7],[[4],[10]],[[[2],8,8],[[1,0,6,5],4],6,[4]],[[[],[9,8,7,10,6],2,[1]],[[],9,3,[1,6,5],[]],6,4,9]]\r\n[[8,[2,[3,7,1,0]]],[8,4,[[9,4],[0,3,5,5]]],[8,[[2,10,4],7,5,[9,0,5,0,4]],3,9,[8,8,3,3,0]],[[9,4,[0],4,[6]],[[0,10,0],6,[9,4,10,0]]]]\r\n\r\n[]\r\n[[[[0,4,6,7],3],2],[5,[10,[8],[4,9,4],[],5],6,[[0,6],[4,7,7],[],10,[]]]]\r\n\r\n[[[3],8,10,[[8],2]],[9,8,10],[[[],[],3,[]],[],[1,9]]]\r\n[[2,0,0,9],[[],[[10,2],[]],[7,[1],4,[2,5,8,1,2],6]],[[8],[[9,3,3,8],2,[5,5,2,9],2],[5,[],6,[2,1,4,10,1],7]],[],[]]\r\n\r\n[[[[1],[7,1,9]],[[],0,[0,7]],[6],9,[]],[]]\r\n[[[[2,8,7,3],[4,2],10,[8,4],7]],[],[[7,[3,2]]],[[[8,7],8,10],0,2]]\r\n\r\n[[[1,[6,7,0,8]],6],[2],[6,7],[],[[[1,9,2,10],[9],[0,4,3,1],[6,10,2,4],[4,0,10,6]],[6,5],6,[5,10,[1,0,10,1,2],[5,10,5],9],[[3]]]]\r\n[[[[3,9,0,6,3],[]],1,7,4,[[9,8,5],1,6,[]]]]\r\n\r\n[[],[[[]],9,[[2,6,2,9,5],9,[6,6]],[[1,0,7],[4,4]]]]\r\n[[1,[[5]],1,0],[2,[[9,9,1,8],2,8,[0,5]],[]],[0,[5,8,4],[[6,2],[3,6,0,8],[4,2,5],[5,10,4,6,6],[5,5,6]],[7,2,10,[]]],[7,[]]]\r\n\r\n[[5,[4],[0,[5,3,2],[]],0],[3,[10,2,7,[]]]]\r\n[[],[4,9],[[[2],[0,10,6,1],1,[0],[9,4,8,1,9]],0,[[0],8,9,[1,1,10,10]],7],[[[3,10],10],10,2,[10,3]],[[5]]]\r\n\r\n[[4,[],[[0,3,5]],[[]],1],[9,[0,4,7],[3,[5,10,9,2],6,2,6]],[]]\r\n[[[1,4,[10,3,8],[7,7]],[1,[]],[[1,2,5]],9],[],[],[0,6,2,8]]\r\n\r\n[[[[5,9,4,1]]],[0,1,[],7],[[[]],[9,[2,5,10],5,1],[[]],[[9],[6,4,0,4,9],1],[8]],[[10,1,7],6,10,7,6]]\r\n[[[8,9,[0,9,2,5]],10]]\r\n\r\n[[9,[[4,8,2,0],[0,1,7,7],5,[4,3,0]],6,[1,[3,9],[3,10,10,3,1],6]]]\r\n[[],[5,[[4,0,9,5],1,[2,0,5,6],8,3],1,[[9,3,10,10],[],[10],7]]]\r\n\r\n[[[[4,7,4,1],8],1],[[8,0,0,5,[0]],2,[]],[[[5,8,6,10,0],[],7,[],1],[7,[7,8,0,2,5],9,[8,5]],[8,[7,4]]],[10,[9,3,[0,5],[2]]],[[6,3,6],6,[[7,1,10],5,4,[3,5,1,7,10],9],[1,5,[2],[5],[3,7,0]]]]\r\n[[],[[],10],[0,[],5],[2,[8,2,0],[3]]]\r\n\r\n[[2,3,[3,6,8],5,2]]\r\n[[],[0,0,[],8,2],[[[],[0]],[[],4,6,0,[8]],5,7,10],[[],[[1,6,3],[6],[6,7,0],4],[],[[1,10,4],2,0]],[[9,[1,0,7,1,7],3],3,9]]\r\n\r\n[6,1,3,9,6]\r\n[6,1,3,9]\r\n\r\n[[3,10],[8,[[8,4]],0],[],[0]]\r\n[[[[6,6,9,5]],[[4,0,0],[9,8,10,9]],6],[[1,[1,8,7,9],[]],4]]\r\n\r\n[[[],4],[[[]],6,1],[[4,1,[8,8,9,3],6,9],1,8,[],3],[[[3,4,6,0]],9,0,0,[]],[[[5],[4,7,9,6]],2]]\r\n[[9],[[[3,2,2,3],0],5,[[6,6,0,9,6],[10,3,3],3],[]]]\r\n\r\n[[],[],[],[7]]\r\n[[[4,[5,0,7],[5,5,4,4,2],9,[8,0,0]]]]\r\n\r\n[[7,[[0,3]],4],[9]]\r\n[[],[4,[[7,10,4,7,6],[3,8,2,1,6],8,8],2,5],[7]]\r\n\r\n[[[4,0],0,7,[0]]]\r\n[[1,[8,[4,2],6,2],0,[],8],[[]]]\r\n\r\n[[],[0],[[[7,2,10]],3,[[8],2,[5,2,1,5],1],[8,[9,9],1]],[],[2,[[10,3,8],0,[8,6,0,5,1]],[2,7],[[3,6,7]],[2,[0,7,2,4]]]]\r\n[[],[[],6,7],[3,5,[0]]]\r\n\r\n[[10,7,[[9,2,5,10],[],3,[2,3]]],[[[1,0,10],0],[[6,6,2,9,6],[2,3],4,[2,4,5,2]],7,[5,7,8,[10,4,10,4],9],4],[]]\r\n[[[9,9,3,2]]]\r\n\r\n[[5,0,9,8,1]]\r\n[[3,5,[[],5,0],7],[7,9,9,[[6,0,4,4],2,[10,3],5,6]],[]]\r\n\r\n[[0],[[],[],[1,[7]],[]]]\r\n[[],[[4],[8,[0,1,5,2],[0,9,3]],9],[1,[1,[],4,9],6,[],8],[[2],[[7,3,4,9],10,6,[5,7,10],8],5,1,5]]\r\n\r\n[[],[9,[[],3,4],[],3,[1,[8,5,1,9,7],[1,9,3,2],[2],4]],[[1,4,1,[0]],[[6,6,3,6],[2,2,6,9,5],0]],[[3],[]]]\r\n[[],[[[2,8,10,3]],10,[[5,3],4,8,[8]]],[1,1,[[]]],[],[]]\r\n\r\n[[],[7,[6,[1,4],9],10,8,[[],6,1,3,8]]]\r\n[[9,0,[[7,0]]],[],[2,9,3],[[[5,8,8,8],9],[6],0,[[1],9,8,[]],2],[[],[5,0,[],8],[[9,4,0,2],9,1,9],3]]\r\n\r\n[[[5],[[3,1,7,10,3],8,[],7,[1,7]],5,0]]\r\n[[[2,[3,4,9,8,10],[5,6],[9,10,8],[6]],[1,[10,7,3,7],[8],4],3,9,9],[[2,[5,1,10,8],[1,9,8,9,9],10],6,2,[]]]\r\n\r\n[[9,[],[[1,0,4],[7,5],[0]],[2,2,[5,3,10,9],[8,4,6,0,0]],[1,[4,2]]]]\r\n[[[[5,6,4,3,6],4,[3,5,10,7]],1,[8,[7,5,9,10,7],2,5,7],0],[[6,[0],[],[3,3,2]],[[5,2,4,2,3],10,2,4,8]]]\r\n\r\n[[[],8],[6],[[[7]],6,[[9,7,5],[5,0,3,3],[2,2,0,8,3],[5,7,8,1,3],[1,6,4]]],[8,[6,4,[],0]]]\r\n[[[[3,3,3],7,10,2,[0,1]],[[2,4,3,2,2],[7,2,4,4],10,[8,1,1]],4],[4,3,[[],5,[1],[0,7]]],[8,6,10,[]],[[5,[7,0,6]],3,10,10],[7,0,[10,4,3,7],3,2]]\r\n\r\n[[[7,[0,2],[],3,[5,0,6,9,0]],0],[[[8],[6,8,4,2],[8,6,4,8],4,3]],[[3,2,4],[6,2],10,[[6],3,[2,6,0]],[[7],4,6,[]]],[]]\r\n[[7,1,2,1,[[2,0,8,10,10],[5,6,1],[6],[5]]],[[6,[10,5,10,1,1],6],1],[[[8,1,2,5,8],0],[10,9,[2,4,4,8]],6,[2,[1],0],6]]\r\n\r\n[[9,3,8,[1,[1,2,6,8,0],9,0]],[[6,[9],[6,2,1,5],[3,6,0,0]],[[6,0,1]]],[[[3,9,8,8,5],[1,8,3,10,5]]],[1,[[3,4],4,[9,7]]]]\r\n[[0],[[[],7,[8],[7,8,9],3],[[],3,[9,7,7]],[8,[3],0],[1,4],[[8],[]]],[[[6,10,0,1],[4,6,1,5],[6,3,1,4,0]],2,4],[]]\r\n\r\n[[[[2,0],[10,1,7,7,7],[8,4],[],[7,4,5]],4,[],1,4],[7],[4,7,9,[3],[[3,4],3,4,[5,6,4,7,10]]],[3,7,8,[2,7,[8,0],4]]]\r\n[[8,7,9],[[[3,7,9,8,8],[5,6,5],1],9,[[0,5],[]],[5]],[[[8,2,7,9,0],1],1,[],[],[[4,2,0,10],[],0,[2]]],[]]\r\n\r\n[[[],3,5,[[],[6,10],[7],5]],[[[9,7,0]],[0,4,3],9,[[],0,[5,5,1],10],[8,[]]],[[[3,3,10,3]],0],[[1,[3,3],[],0],[[],8,7,[5,3,6,2],[7,6,9,3,5]],6,2]]\r\n[[[[1,4,6,8]],0,[3,0,[],8]],[1,8],[7,[]],[7,[6,7,4],10,[3,0,[7,3],7,7],1],[5,[8,[2,4],3],[3],1]]\r\n\r\n[[[1,0,2],[5]]]\r\n[[[9],[[1,3,9],[4,3,9,2,4],[7,0,1,10,1]],[0]],[3,[[2,7],4,[6,1,5,5,6],10],9,7,[[8,7,8,9],9,[],[0,2,3,4,10],0]],[4,[[6,6,1,9,0],2,0,[2,10,6]],6,0,3],[3,5,9,[]]]\r\n\r\n[[0,0,0,[10]],[[[1,7,4,0,5]],7,2]]\r\n[[[[9,10,9,10,7],1],[],1,[[]],4],[8],[3,[7,5,9,[0,0,5,10]],6,10,2],[5,3,4,[[7],7],3]]\r\n\r\n[[[[6,2],5,10],0,8,[[10,1,4,4]]],[[[1],5,7]],[[[2,7,9,5,7],4,10],[[8,8,2],[],6,0,[3,8]],[[],[],[],[6,7,8],9]],[[6,4,[6,10],1,[3,2,8]],[],1,[[0,3,9,5,2],[3,2],9,8],1],[]]\r\n[[2,[7,[3,5,6,0],4,1],6,[[7,2,3,10],3]],[],[6]]\r\n\r\n[[8,[],[],[10,8,[0,7,8,8,3]],[[7,3,7],[8,8,10,10]]],[8,10,[4],7]]\r\n[[[]]]\r\n\r\n[[9,[[3,10]],5,10],[9,1],[5,4]]\r\n[[[]],[6,6,5],[[1]],[6],[]]\r\n\r\n[[6,[5,2],9],[6,9],[4,[[4,4],1,[0,2,4],8,1],0,8]]\r\n[[[8]],[[[5,6],2,3,6],[2,9,[7,0,0,7,3]]],[[[],3]]]\r\n\r\n[[[],10,[5,[3,3,3,6,0],[7,8,2]]],[],[]]\r\n[[5,[8]]]\r\n\r\n[[[4,[],[],[1,6,4,7,9]]],[[9,[1,4,7,10],9,[9,3,1,7]],2],[],[]]\r\n[[[[2,6]],0,10,[1,10,0],[5,[5]]],[4],[4]]\r\n\r\n[[10,[],10,2],[],[5]]\r\n[[[]],[6,5,8,10,[[0],[5,9],[8]]],[],[10,[[8,2],7]],[[[],9],6,[[8,8],[1,3,7,3],6,8,[9,3,0,9,8]],[],9]]\r\n\r\n[[[[],[7,10],0,5],[0,[]],9],[2,7]]\r\n[[3,[]],[[6,10],[1,[7],[2,0],7,[]],[[6,8],1]]]\r\n\r\n[[[],3]]\r\n[[[3,9,6],9,[6,3,[0,8]],[6,8,5,[10,5,9,10]]]]\r\n\r\n[[[7,2,10,[]],7,[[],[],[],10]],[0,0,9]]\r\n[[],[[[1,1,8,1],[1],6,8],[[8,3,0],9,[3]],[4,[7],5,[1,2,9,8],[6]]],[8,[[],[7,2,4,6,5],[1,4,6,7]]],[[1,3,2,9],[[0,3,4,0,0],3],3,9],[5,[[5,7],[5,7,3,8,3],[6,0,2,3]],5]]\r\n\r\n[[],[[1]],[5],[2,[],[2,[9,7,1,4],[9,4,4,2,4]],3]]\r\n[[3],[],[6,[[10,10,10],2],[3,2],5],[]]\r\n\r\n[[],[[9,[10,3],[1,4]]]]\r\n[[5],[[],[[5,6],[],9],[]]]\r\n\r\n[[5,5,10]]\r\n[[[[10,9],[2,10,0,8],[4]]]]\r\n\r\n[[],[[10,[]],[[8,7,3,9],2,10,7],1,7,[1,0]]]\r\n[[[[6,4,3],0,5,3,9],[],9,[3,[4,4,0,1,9],10],[10,[0,2],[7,7,1,5,9]]],[2,3,3],[[],[2,1,[]],9,9],[[3],[5,9],[2,[10,7,3,4],[2],10]],[]]\r\n\r\n[[5],[[],5,8,7],[[[0,0,10,6,5],3,[10,4,8],[]],[[3,5],[2,0,2,7],9],9,[7,9],[1]],[],[[0,5]]]\r\n[[8,[8],3,[[4],8],[5]],[8,4,5,[7,1,[4,7,1,2],4,9]]]\r\n\r\n[[2,9,4,[[10,8,10,2,6],[],7,[7,0,6,8,2]]]]\r\n[[5,[],10],[2,[3,6],[],[],[]],[[6]],[9,7,[0]],[]]\r\n\r\n[[1,1],[0]]\r\n[[7,[9,10,5],[[5,6,5,6,7]],0,[[1,8,4,10,1]]],[],[[8],[[],9,6],10,9],[[[],10,0,3,10],[[3,3,8,5]]],[[1,6,10,5,[2,0,3,5,0]],[8,[],10,10]]]\r\n\r\n[[[8,2,[],[],8],[[9,3],10]],[]]\r\n[[[4,10,9,2],5,2],[[10]],[[1,7],[10,5,2],2,5,4]]\r\n\r\n[[[9],4,4,9,[1]],[[7],5]]\r\n[[],[8,6,[],[[0,4],[],[7,4,6],7,7],[]],[[4],[[7,3,6,8],5,1],[8,7,5],[2,7,[3,4,6,2],[],[]],8],[2],[[1,9,[9,8,9,2,7]],3,[],3,[]]]\r\n\r\n[[2,[10,2],[[6],10,[10,6,8],[5,8,7,5,6]]],[2,8,9],[]]\r\n[[5,[[4,10,6,10],5,[1,1,10,8],9,[4,1,4,0,3]],9,9]]\r\n\r\n[[6,5],[[7,0]],[7,4,7]]\r\n[[[7,[],[2,6],1,4],8,7,9],[[[]]],[[5,4,[2,9,1]],10,2]]\r\n\r\n[[[[0,2,4,8]],[[6,10,8,6,1],10,[4],7,7],10,[[6,5],[],3,[8,6],[]],[[]]],[[9,10,7]],[],[7,6,[[]]],[[4,8,[6,5,3,5],9],6,[[7,8],[1,0,8,10,7],[7,3]],[7,2,0,8,[5,7]]]]\r\n[[[[7,3,6],3,[6,1,10,9],7,[5,0,7]],10]]\r\n\r\n[[[6,[6],9,[3,1,7,3]],6,[[6,9,6,10,0],[],5,4,3]],[[[10,1,2,4,2]],[2,[],[6],8],[[5,4],[3,4,9],[4],5],0]]\r\n[[[[1,4],[2,5,8]]],[9,[4,0,1],[10,8,[3,9],6,7],[[3],1,[0,1],[3,0]],[[9],1,1,9]],[[9,[3],8],3,3],[]]\r\n\r\n[[2,6,[2]],[4,2,9],[],[7,4,[2]]]\r\n[[[[2,8,1,3],[],9,2],8,[],[8,[]]],[[],[[2,9,2,0],9,[],1],5],[8,[[7,7,3,8,3]],8,3],[[[]],[6,2,[6,8,6,1],8],[[0,6],[3,9,2],[8,7,4],9],[2],[6]],[2,8,9,[[5,2,4]],10]]\r\n\r\n[[[]],[],[[[],10],[2,9,5],0,[[9,4,3,10,10],[2,0,8,9],[1,6,6],1,[]],[[10]]],[7,6,[[],[5],[2,6,7,10,5],8],[],[[],9,2,5,2]],[[3,3,[6,10,10]],6,8]]\r\n[[1,0,4,[7],[7,9]],[10,[[1],[],2,8,0],0,7]]\r\n\r\n[[[],10,6,3],[1,[[5,5,8],4]],[5,4]]\r\n[[[[8],[2,7],[0,3,3,7]],1,[2,[1,5,5,5],[],[2]],1],[[[4,9,8,9],[8,10,4,2,3]],[],3],[[[10,0,6,10,7],6,[8,4,5,3,9],[1,7]],10],[[[9,3],9,[]],8,3,10,[10,10,[5,1,2,7,4]]]]\r\n\r\n[[[[]],[[9],[4,1,4,4,0],7,1,3],8,[8,[10,8,6,1,3],[],[7,2],0],[]],[0,5,6],[5,[10,[0,3],4],[6,[5,9,7],[3,8],[4,1],9],3,[]],[5,[],10,[]],[0,9,[],3]]\r\n[[10,3,8],[],[],[0,[6,0],[6],[[],0,[10,0,6,3]]]]\r\n\r\n[[[[7,6,6],[7,1,0,9],6,5,[]],[0],[]],[6,0,5,0],[10,[[4,6]],[[3]]],[[],[[0,5,6,10],2,[3]],5]]\r\n[[3,1,[[9],8],[9,10,2]]]\r\n\r\n[[[],[4,3],[[],[9,3,6,9,7],10,[0,2]]],[[8,7,10],8]]\r\n[[[3,9,[],[10],0],[2,10,2,0]],[10],[],[0,[3,[2,2]],10,3],[[[3,4,4,7,1],1,9],2,[3,[7,7],[4,4,0]],0,[]]]\r\n\r\n[[6,8,[[0,4,0],2],[[3,2,9,2],0,[8,7,0,5,9],[3,8,2,6]]],[7,3,2],[6,[[]],[8,1,[8,4,2,0,7]],[],[[3,4,1,8,0],[7,5],6,[4,9],7]],[5,[4,[],1],[[8],1],6],[]]\r\n[[[7,[]]],[1,10]]\r\n\r\n[[0,3,9],[1],[3,0],[4],[[9,[4,8,8],[],8,[]]]]\r\n[[[[0,10],[2,10,7],1,10]],[8,8,2,[6]],[[1],[2,[9,6,9],3,4],3],[5,2,[],[0,4],1],[[2,10,[0,3,6],7],9,[3,[5,7,4,8,3],4,4,0]]]\r\n\r\n[[[4,[0,10,9],3,[]],2,0,[5,5,9,[],0],10],[[6,4,[6,2,9,9,2],[9,1,9,6],2]],[],[[],6,6,4,[]],[[],8,[[9,9,7],[2,0,3,8,0]]]]\r\n[[],[4],[[4,[0,9,5,7,3]],3],[[9,[5,1],[6]],5]]\r\n\r\n[[6,[[5],2],7,[0,9,[6,3,5,0,6],2],[[4,7,3,8],[9,8,6,5],8,8]],[]]\r\n[[[[4,2,3,10],[],0]],[[[9,0,7,4],[6],3,8,5],[],3,3],[[3,[3],[],[3,5,2,4,1],[7,3,5]],9,4,1],[],[5,6,[1]]]\r\n\r\n[[1,[],[6,[7,1]],10,[[1,7,2],8,[9,6,3]]],[4,[[],[8,8,5,5,3],1]],[[[]],6,2,[2],[[],3]]]\r\n[[6,2,[3,6,0,5],[9,[9,8,9,3,10]]],[4,[6,7,8,[],[2]]],[4,[[1,9],[],[7,9,6,10,7],9,8],6,0],[]]\r\n\r\n[[[[8]],[9,8,[3,2,6,2,7],[3,6,2,5],8],[[3,6],0]]]\r\n[[[[5,3],1,7],9,3,[9,0,[3,2]],[10,9,[4,9,6,8,8],[],[7,5]]]]\r\n\r\n[[4,2,5,6,[1,1,5,[8,2]]],[[0,[3],3],0,0,0],[7,[3,[9,9,5,1],[],3],[]],[4,[[9,8],[6]]]]\r\n[[],[2,0,[[],[8,5,4,7],9,[3,5]],[9,2,[8,4],[7,5,6,7,3]],7]]\r\n\r\n[[1],[[10,5],[[],[],[],3],7,4],[[10,[6,4,9,1],6,0,[2,0,0,6]],[5,2,9,[8,1]],[[9,0,2,3]],[],6]]\r\n[[7,[2,[6],1,1,[1,8,1,6]],[],4],[7,[7]]]\r\n\r\n[[[[5],10,[10],[],[8,6,4,2]],5],[8,[[5],6,[],[8,4,9]],[10,0]],[[3],[],9],[4,[6,6],[]]]\r\n[[1],[4],[[7,[],[3,9],1],5,[[9,0,8,4],7,[8,6,3],[10,9,4,2],9],10],[[8,7,[2,8,10,9,9],9],5,[]]]\r\n\r\n[[[[5,1,5],[8,4,6,5],[9,10,0]],7,4],[[[7,2,8,5],0,[]],[],3,4],[[4,3,[2,6,9,9,6],9,[8,7]],5,10],[1,[],9],[9,[[9,9]],[1,6]]]\r\n[[[[9,5,9,10],[]]],[9],[]]\r\n\r\n[[[[3,3,6,0],6],10]]\r\n[[[3,2,[0],0],[],[[6]]],[5]]\r\n\r\n[[[2],[]],[1],[[[9],10],5]]\r\n[[8],[10,7],[],[4,6]]\r\n\r\n[[[[5],10,[1,8,1,5,1]]],[[],[9,8,8]]]\r\n[[3,1],[],[3,4,[[7,3],5]]]\r\n\r\n[[3,10],[[4,7,[1,8,6,10,8],5]]]\r\n[[[10,[8,6,7,6,10],[1]],[[10,4,5,5],[5,5,9,4,1]],5]]\r\n\r\n[[[10,8,2]],[],[]]\r\n[[[[0,9,0],[6],[0],6],8],[[10,[0,1]]]]\r\n\r\n[[[]],[[[9,9,8],[],[8,10]]]]\r\n[[5,[[0,6,0,2,1],4,9,[6,2]],9,[[4,4,8,0,0]],[[],[5,3,1]]],[8],[[[6,10]],2,6]]\r\n\r\n[[[[6,1,5,10],6,[8,7,3]],5,[1,[10,5,7],2],[[7],8,6,8]],[[[10,10,5,4]],3]]\r\n[[],[10,10,[9,[8,2,0,10],9,[7,7]],8,[6,9,[6,8],[5,5,10,5],4]],[5,8,10,[0]],[[[10]],[5,10,5,[0,5,9,10]],3],[]]\r\n\r\n[[[[4,1,2,9],[8,5,10,5,7],0],[[0,3,6],10],8]]\r\n[[[3,[2,2],[5],[8,2,0,0,9],4]],[8,7,[[3,8,9,4],10],7]]\r\n\r\n[[9,9,[10,[0,5,1,5],[5,9],[7,10,9,10]],8],[1,0],[],[5,3,[5,10],2]]\r\n[[[0,8,8,8]]]\r\n\r\n[[5,[[10]]],[[],1,[[9],[10,6,6,0],4],[7,8,6]],[[5,[2]],[],[8,[10],1],10],[[10,[5,5,1],6,0],0]]\r\n[[10,[9,1,[7,5,3],8],[[10],8]],[[6,[6]],[10,0,6,0,2]],[[[],0],[10,9,8,4,[1,6,8,3]]],[9,9,6],[10,[]]]\r\n\r\n[[[[6],[1]],4,[[5,10],[0,10],6],[[5,7,10,10],[6,5,0,10],[],[3,9,8,1,0]],4],[],[[0],3,1,0],[6,[[9]],[[5,9],4,[9]]]]\r\n[[[[9,8,6]]]]\r\n\r\n[[10,6]]\r\n[[],[4,[[0,3,8,8,1],[0,10,7,7,7],[],[8]],[[],[1,1,10],4],2,[[6,3,1,5]]],[]]\r\n\r\n[[[],0,5,8]]\r\n[[3,[10],10,[],7],[[[5],[8,8,6]],[[7,2,0],6],0,6],[[5],[[3,6,1,8,6],8,5],[[],[9,7,0,9,4],0,9],10,5]]\r\n\r\n[[],[]]\r\n[[1,0,[[5,4,5,2],0,6,[7,2,8],4],[[2,10],9,3],4],[4],[[4]],[[6,3,[],4],0,4],[4,[]]]\r\n\r\n[[[[4],[2,4],6,[]],1],[10,[3,0,4,[2,0,4,3]],[[5,6,0,1,2]],[[3],0,[]],[[6,10]]],[4],[],[2,2]]\r\n[[[3,[4,1,4,2],[1,3],[6,6]],[[10],9,[2,0,1]]],[3,9,[3,[5,9,5],7,[1,10,9],8],10],[[3,[7,9,1,10,4],[5,8],[9,10,8,7,1],5],9,2,[[3,7,0],10,[],[7,6,2,5,1],[]],[]]]\r\n\r\n[[[[2,9],[]]],[[10,[2,10],[],[7,1,2],9]]]\r\n[[5,9,6,[0,[2,9,6],[2,2,1]]],[1,[[8,4],[9,1],[7,1,10,5,4],[9,4]],9,6],[4]]\r\n\r\n[[[0,[10,3,10,0],5,4,1],[],8,1,10],[[],[[7],[8,3,7,8],[3,9,2,0],9,[9,5,7,4,1]]],[],[0,10,[0,[9,5,0,5],[7,9,7,10,9],0,[]]],[]]\r\n[[1,1,7,0],[10,7],[[1,0,[8],5],6]]\r\n\r\n[[[8,4,[5,5,2],3]]]\r\n[[0,7,[6,[],[10,5]],5],[3],[9,8,[],[[2],[1],9,[3,6]],[[]]],[0]]\r\n\r\n[[[6],[[2,6,10],[8,3,10,1,10]],2],[[[8,2,8,10,3],5]]]\r\n[[[[]],8,[[8,4],[],[],[4,4,1,0,10],[1,5,2,4,6]],3,[0,[8,0,2]]]]\r\n\r\n[[8,3,[4,[]],[[3,5,5,7,8],[2],1]],[]]\r\n[[[[6,5,1,3],0,6]],[7,9,[],0]]\r\n\r\n[[4,0,[[8,0,10,7],10,1,[10,1,8,10],[]],4,10],[7,1],[8],[7,[[4,0,7,1]],[7],[]],[]]\r\n[[8,[[10,8,4,7,10]],[[10,2]],[5],[[1,5,2,6]]],[[[4,4,3,4,4],6],9,[6],[0,[9,6,5,1],[9],[8,5,0],[0]]],[8,5,[8,[2,6,0,3,4],7,4],8,[6,[4,0,10],[]]],[[[8],[0,2,8,0]],[6,[1]],[],1],[]]\r\n\r\n[[2],[[[8]],6],[2,[[7],10,0,[8,7]],9,[9]],[]]\r\n[[2,[[4,9],4,[],9]],[[1,[8,7,3],0,2],2],[[],5,2],[0,10]]\r\n\r\n[[4,7,0,[],[0,[0],[3,2,10,1],[0,4,4]]],[7,5,[[0,4,6]],[[2,9,1,4,0],9,[8,10,5,7]]],[6,[5,9,[8,0]],[5],[]]]\r\n[[[6,[4,1,6,0,2],10,[2,5,3]],[5],9]]\r\n\r\n[[8,[2],[]],[1,10,3],[10,[[1,8,6,7],9,6,0,5],[3,10,0]],[[[1,9]],5],[10]]\r\n[[[[],[6,6,4,6,2],10,[7,5,8]],[[3,8,7,3],2,9],0],[2,1,[9,[7,7,3]],[9,8],[[3,9],[8,10],[7,10,6],0,[]]],[0,2,5],[[[3,6,6,10,3],[],[3,6,5,0],[]],[9,[4,6,8,5,9]],[[8],[1,1,8,1],7,4,[2,10]],8],[10,[6,[],[]]]]\r\n\r\n[[[3],[],8,[[3,9,9]]]]\r\n[[[[3,0,3],9,[3],2,10],6],[[],[0,7,8,8,[5]],9,[8]]]\r\n\r\n[[1,3,[[5],[3,7,1],7,[10,8,5,10,6]]],[[10,5,4],7,[0,[4,8,1,4,5],[5,0,5,4,8],5,8]],[6],[7],[[[7,6]],9,[0,[9,10,10],9],2,9]]\r\n[[5,10],[6,5,[]],[2,2,1,[],5]]\r\n\r\n[[[9,[3,7,5,0,10],[2,4,8],[8,9,5]],[],2],[10,8],[[[10,6,4,9],[5,5,3,0,10],[8,10,3,7,5],[8,4,3,5]]]]\r\n[[[1]],[[],6,[1,[4,3,6,8,8],7,[3,3,4,9],[9,8,1,3]],[[7,8],0,1]],[5,[8],8],[[[0],4,[1],[7,0,7,8,8],7],[6,5,[5,0]],10,[[7],[6],9]],[3,10,[2],[[8,2,4]],0]]\r\n\r\n[[[3,9],5,3,7],[2,2,4],[[[7,1],3,4],[]],[[[8,1,10,9,10],7,[7,10,3,8],1,3]],[[10]]]\r\n[[[0]],[]]\r\n\r\n[[[]],[[4,8,[8,0,7,3]],5,3,1],[5,8,[8,[2,7,9,3,2],[5,0,1,4,7],5],8,[[9],3,[9],[8,2,5,3],[5,8,4]]],[9,1,1,[7],[]],[6,[2,[1,3]],[3,4,[8,6],0,2]]]\r\n[[[2,7,2],[]],[6,3,[8]],[4]]\r\n\r\n[[],[[2],[[5,8,1,9,6],[],7],4],[],[[6,9,[7],2,1],[8]]]\r\n[[[3,7,[],6,3],[6],5,3]]\r\n\r\n[[3,8,[[3,4,1,2,3]],[0,[1],[7,3,8,10,9]],[[2,10,7]]],[[[0,3,8,9],[0,6,8],8,1,2],7,[9,0,7,[9,5,0]],[[]],[[5,3,6]]]]\r\n[[10,[]],[2,[4],[]],[[[0],[0,6,5],[7,4,3,2,3]]],[]]\r\n\r\n[[4,[[8],[5,10,9,6,5]],9,5],[2],[2,10,5,[]],[[[0,10,8,1],3,6],8,8,[[5,10,9,6,10],[4,10,9,9],4,10]],[2,[4,[9]],8,1,[7,7,1,[]]]]\r\n[[[8,5,0,[10,6,5],[0,6,1,0]],[[1,1,3],[6,6,3,7,5],9,10,[8]],[[3,3],7,[5,0],4,[9,3,9]]],[[4],[[6,6,0],7,5,3]],[],[3,[0,[10,8,10],[3,0],8],[3,3]],[[[10]],[[7,6],[2,7,10,0,5],6,0],[[9,3,10,2],8,[5,8,1]],10]]\r\n\r\n[[[],6,9,[2,[10,4,6,9,1]]],[[[8,6,4,5],1,[5,5,3,7,8],[]]],[[[5,5,10,7]],[[2,4],0,[2,2],10,[]],[[1],[0],[1,1,7,3,8],[4,10,0,0]]]]\r\n[[7,5,[[],10,[],6,[4,1,1,1]],[8,4,[4,0,9,0]],[]]]\r\n\r\n[[[[4,0],[]]]]\r\n[[[6],7],[[6],3],[6,[[2,6,10,7,8],1,2,10,4],[[1],6,5,6]],[]]\r\n\r\n[[8,[2],[4]],[],[]]\r\n[[[[6,8,10,8,5]],9],[]]\r\n\r\n[[[]],[],[[[8,3,5,4,4],[9,5,4],[2],[9,4,3],[3,7,3,9]]],[4,[3,[]],0,[[10,9,0],2,8,[1],[]]]]\r\n[[],[7,[]]]\r\n\r\n[[],[1,[2,5,[]],4,10,2],[0,8,5,[[10,9],1],[[],3,[3,6,0,7,2],0,[2]]],[[[7,2,9,2],[],[3],8,[]],10,[8,0,[6]],[10]],[5,[[9,10],2,[9]],3,[9,[4,9,5,9,7]]]]\r\n[[[[2],[5,1,3,2,10]],[7,[3,7,4,2,7],[9,2,6,8],1],[[8,4,3],[8,8,5],5,6,6]],[]]\r\n\r\n[[6],[7,[[0]],[3,7,[7,5,8,0,9]]],[],[7,[3]],[0,0]]\r\n[[0,0],[[9,0],[[10,7],[2,5,8,8],6],[[9,5,3,3,9],[7,4],8,6,2]]]\r\n\r\n[[[],[3],1],[[[0,4,0,8,0],3,[5,1,9,5]],8,8,6]]\r\n[[2,1,5]]\r\n\r\n[[],[[8,[6,1,0,9],6],9,3,1]]\r\n[[],[4]]\r\n\r\n[[[[3,5,4,10,4],10,[2,3],9],8,[4,[2,4,3,10,6]],5]]\r\n[[0,8,[]],[10],[8,[2,[9,6,9,9],[10,9]],8,[1,0,2],7],[[8,5,[1,2],[7,7,5,1],[1,5,6,6,0]],8,[],[0,[9],1,[3],[8,4]]],[[6],9,8,5,[0,3,[8,10,4,9]]]]\r\n\r\n[[[1,[5,2,4,0],[3,8,7,3],[6,4],[]]],[],[],[7,8]]\r\n[[[[7,4],7,[5,8,2,4,9],8,[8,7,10,7]]],[[5,[],8,[0,9,4,5,8]],[[5,1,8],10,[],7,8],0,[],1],[[[0,3,3],[]],2]]\r\n\r\n[[],[[7,[7,10,3,8,8],[],6]],[3,[[2,0,8,2],[],2],[[4,7,2,7,10],5,[0,6]],10,[[],[8,0,8,9,0],[0,1,10,8,1],3,9]],[[[3,3,0,6]],[[10,1,0,5,8],7,3]],[0,[4,[1,1,0,10,10],5,1],[[1,4,8,2],8,[6,9,1],8],1]]\r\n[[10,10],[6,6,[5,[],6,[4,4,9,9]],4],[],[7]]\r\n\r\n[[],[[[8,5,2,0]],7,4],[[8,[7]],1],[],[0,0,[1,[0,6,10],[4],[],1],[4],3]]\r\n[[[[],[10,1],9,[2,6]],[[],9],[3,[7,0,10,3,8],[0,6]],3],[1,[[3,7,6,5]]],[[]],[[],[10,2,0,[8,3]]]]\r\n\r\n[[[0]],[4,7,[[3,8,4],9],[[8,1,5],[1,1,7,6,2]]],[],[]]\r\n[[[5,0],[3],[1],[]],[[[5,1],6,7,0,10]],[[[6,0,1],0,[]],[9],[],[[9]],[9,[6,0,4,1]]],[]]\r\n\r\n[[10],[],[3]]\r\n[[[[5,2,0,3],5,[],[7,1,5,7]]]]\r\n\r\n[[[5,10,[3,4,5,4],8,0]],[[4],[[3,9,2,8,0],6,6]],[[],7,5,[0,0,[],[10]]]]\r\n[[2,3,5,[[9,5],6],0],[[[4,5,7,6,5],[6,1,9],8,[6,6,6],8],[7],8,5],[0,[6,[0,9,3,5],[9,1,9],3,7],[]],[[[1,6,0,5,0],[1,2,5,6,8],0,8],7]]\r\n\r\n[[[],9],[]]\r\n[[8],[[[]],[],[3,3,[10,7,9,0,6],0],9],[],[[[5,10,5,8,10],[5,1,8,10,8]],6,0,[3],[[]]]]\r\n\r\n[[7,[]]]\r\n[[[],9,[[0,9,1],[6],9,[8,4,10,4,7],[6]]],[3,[2,[0,5],7,9],2],[[[9],7,[1,7],9]]]";

var perso = "[4]\r\n[4]\r\n\r\n[[4],9]\r\n[4,4]\r\n\r\n[[4],1]\r\n[4,4]";

var pairs = testInput.Split("\r\n\r\n").Select(line => new Pair(line)).ToList();

foreach (var pair in pairs)
{
    Console.WriteLine(pair.Left);
    Console.WriteLine(pair.Right);
    Console.WriteLine(pair.IsOrdered);
    Console.WriteLine();
}

var result = pairs.Select((pair, index) => pair.IsOrdered ? index +1 : 0).Sum();

Console.WriteLine(result);

internal class Pair
{
    internal readonly Packet Left;
    internal readonly Packet Right;
    
    internal readonly bool IsOrdered;

    internal Pair(string line)
    {
        var part = line.Split("\r\n");
        Left = ParsePacket(part[0]);
        Right = ParsePacket(part[1]);
        IsOrdered = CheckIfOrdered();
    }

    private bool CheckIfOrdered()
    {
        return Left < Right;
    }

    private Packet ParsePacket(string part)
    {
        var newPacket = new Packet();
        PacketDatas currentPacketData = newPacket.Root;
        part = part[1..^1]; // remove first and last char , should be []

        //Maybe a regex do the trick
        var parts = new List<string>();
        var letters = new Queue<char>(part.ToList());
        while (letters.Count > 0)
        {
            var letter = letters.Dequeue();
            if (!char.IsDigit(letter))
                parts.Add(letter.ToString());
            else
            {
                string number = letter.ToString();
                while (letters.Count > 0 && char.IsDigit(letters.Peek()))
                {
                    number += letters.Dequeue().ToString();
                }
                parts.Add(number);
            }
        }

        foreach (string p in parts)
        {
            int number;
            switch (p)
            {
                case "[" when currentPacketData is IntPacketDatas cpd:
                    var parent = cpd.Parent;
                    parent.Childs.Add(new ListPacketDatas(parent));
                    currentPacketData = parent.Childs.Last();
                    break;
                case "[" when currentPacketData is ListPacketDatas cpd:
                    cpd.Childs.Add(new ListPacketDatas(cpd));
                    currentPacketData = cpd.Childs.Last();
                    break;
                case "]" when currentPacketData is IntPacketDatas:
                    currentPacketData = currentPacketData.Parent.Parent;
                    break;
                case "]" when currentPacketData is ListPacketDatas:
                    currentPacketData = currentPacketData.Parent;
                    break;
                case ",":
                    break;
                case string str when int.TryParse(p, out number) && currentPacketData is ListPacketDatas cpd:
                    IntPacketDatas newData = new IntPacketDatas(cpd);
                    newData.Values.Add(int.Parse(number.ToString()));
                    cpd.Childs.Add(newData);
                    currentPacketData = cpd.Childs.Last();
                    break;
                case string str when int.TryParse(p, out number) && currentPacketData is IntPacketDatas cpd:
                    cpd.Values.Add(int.Parse(number.ToString()));
                    break;
                default:
                    throw new Exception("Vous ne parserez pass!!!!!!");
            }
        }
        return newPacket;
    }
}

internal abstract class PacketDatas
{
    internal ListPacketDatas? Parent = null!;

    protected abstract bool IsLowerThan(PacketDatas than);

    internal PacketDatas(ListPacketDatas parent)
    {
        Parent = parent;
    }

    public static bool operator <(PacketDatas left, PacketDatas right) 
    {
        return left.IsLowerThan(right);
    }

    public static bool operator >(PacketDatas left, PacketDatas right)
    {
        return right.IsLowerThan(left);
    }
}

internal class ListPacketDatas : PacketDatas
{
    internal List<PacketDatas> Childs = new List<PacketDatas>();

    internal ListPacketDatas(ListPacketDatas parent) : base(parent){ }

    public override string ToString()
    => "[" +
    Childs.Count switch
    {
        > 0 => string.Join(",", Childs),
        0 => string.Empty,
        _ => throw new Exception("Wololo Failed")
    }
    +
    "]";

    protected override bool IsLowerThan(PacketDatas than)
    {
        if (!this.Childs.Any())
            return true;

        if (than is IntPacketDatas)
        {
            than = new ListPacketDatas(than.Parent) { Childs = new() { new IntPacketDatas(than.Parent) { Values = new() { ((IntPacketDatas)than).Values.First() } } } };
        }

        List<bool> results = new() { true };

        for (int index = 0; index < this.Childs.Count; index++)
        {
            if (index == ((ListPacketDatas)than).Childs.Count)
            {
                results.Add(true);
                break;
            }
            if (this.Childs[index] > ((ListPacketDatas)than).Childs[index])
                results.Add(false);

            if (this.Childs[index] < ((ListPacketDatas)than).Childs[index])
                results.Add(true);
        }
        return results.Aggregate((result, op) => result & op);

    }
}

internal class RootPacketDatas : ListPacketDatas
{
    internal RootPacketDatas() : base(null){}
}

internal class IntPacketDatas : PacketDatas
{ 
    internal List<int> Values = new List<int>();
    internal IntPacketDatas(ListPacketDatas parent) : base(parent) {}

    public override string ToString()
        => String.Join(",", Values);

    protected override bool IsLowerThan(PacketDatas than)
    {
        
        if (than is ListPacketDatas)
        {
            return (new ListPacketDatas(this.Parent) { Childs = new() { this } } < than);
        }

        for (int index = 0; index < this.Values.Count; index++)
        {
            if (index == ((IntPacketDatas)than).Values.Count || this.Values[index] > ((IntPacketDatas)than).Values[index])
                return false;

            if (this.Values[index] < ((IntPacketDatas)than).Values[index])
                return true;
        }
        return false;
    }
}

internal class Packet
{
    internal RootPacketDatas Root = new RootPacketDatas();

    public override string ToString()
    => Root.ToString();

    public static bool operator < (Packet left, Packet right)
    {
        return left.Root < right.Root;
    }

    public static bool operator > (Packet left, Packet right)
    {
        return right < left;
    }
}